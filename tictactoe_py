# import os 
# # clear = os.system("clear")

# board = [[".",".","."],[".",".","."],[".",".","."]] 
import random
import time
import os

last_mark = "O"

def get_empty_board():
    board = [[".",".","."],[".",".","."],[".",".","."]]
    return board


def mark_board(board,row,col,mark):
    # global board
    board[int(row)][int(col)] = mark.upper()
    last_mark=mark.upper()
    return board



def try_mark(board,row,col):
    if board[int(row)][int(col)] == ".":
        return True
    else:

        return False


def print_board(board):
    # global board
    print("   1   2   3")
    print(f"A  {board[0][0]} | {board[0][1]} | {board[0][2]}")
    print("  ---+---+---")
    print(f"B  {board[1][0]} | {board[1][1]} | {board[1][2]}")
    print("  ---+---+---")
    print(f"C  {board[2][0]} | {board[2][1]} | {board[2][2]}\n")


def valid_coordinates(row,col):
    if row.upper() in ["A","B","C"] and int(col) in [0,1,2]:
        return True
    else:
        return False

def get_mark(board):
    global last_mark
    while True:
        coordinates = input("podaj wspolrzedne: ")
        if len(coordinates) == 2:
            row = coordinates[0]
            # print(row)
            col = int(coordinates[1])-1
            # print(int(col))
            if valid_coordinates(row,col):
                if row.upper() == "A":
                    row = 0
                elif row.upper() == "B":
                    row = 1
                elif row.upper() == "C":
                    row = 2
                if last_mark == "O":
                    mark = "X"
                else:
                    mark = "O"
                # break
                if try_mark(board,row,col):
                    break
                else:
                    print("ruch sie powtorzyl ")
            else:
                 print("zle wspolrzedne, jeszcze raz") 
                
    return row, col, mark
            
def ai_random_move(board):
    import random
    global last_mark
    while True:
        row = random.randint(0,2)
        col = random.randint(0,2)
        if board[int(row)][int(col)] == ".":
            if last_mark == "O":
                mark = "X"
                return row, col, mark
            else:
                mark = "O"
                return row, col, mark

            


    pass



def full_board(board):
    # global board
    for i in board:
        for j in i:
            if j == ".":
                return False
                
        
def clear_console():
    command = 'clear'
    if os.name in ('nt', 'dos'):  # If Machine is running on Windows, use cls
        command = 'cls'
    os.system(command)

def game():

    board=get_empty_board()                
    print_board(board)
    while full_board(board) == False:
        clear_console()
        print_board(board)
        mark= get_mark(board)
        # mark=ai_random_move(board)
        board=mark_board(board,mark[0],mark[1],mark[2])
        print_board(board)
        time.sleep(1)
        

        
    
        


game()






